[{"title":"Linux与Windows下的终端美化","date":"2022-08-19T05:46:19.000Z","date_formatted":{"ll":"2022年8月19日","L":"2022/08/19","MM-DD":"08-19"},"updated":"2022-08-19T09:22:55.055Z","content":"最近使用WSL练习命令以及写程序的次数比较频繁，看着黑白的终端有些枯燥无味，便想着稍微美化一下终端，自己看着也舒服些。主要是美化下Linux下的终端，顺带也美化了下Windows的Powershell。\nLinux(WSL环境)\nLinux下默认是使用bash作为命令行环境，我们需要切换成zsh后再进行操作，安装命令如下：\n1234567# bash# Ubuntuapt install zsh# ArchLinuxpacman -S zsh\n安装好zsh后，需要把它设置为默认的终端启动环境，否则当前终端窗口关闭后，下一次启动时默认运行的依旧是bash环境。\n1234567# bash# 当前用户下运行该命令，设置默认终端环境为zshchsh -s /bin/zsh# 若后续不想使用zsh，也可用该命令切换回bashchsh -s /bin/bash\n切换到zsh环境下，安装Oh My Zsh，这是一个关于zsh的开源框架，用于管理配置zsh的一些功能，当然也包括美化。\n123# bashsh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;\n在zsh环境下，该命令会下载好脚本自动运行配置。此时在当前的用户目录下会生成一个.zshrc的终端配置文件（文件是隐藏文件需要用ls -a，才看得到），由于我只是想换个主题色彩，直接在.zshrc文件内容中找到ZSH_THEME=&quot;steef&quot;（我已经替换成了steef），换成你喜欢的主题就好了，Oh My Zsh提供了大量的终端配置主题，总能找到一款适合你的。\n12345678910# bash# 运行vim修改.zshrcvim .zshrc# 将.zshrc中的ZSH_THEME=&quot;obbyrussell&quot;改成你自己喜欢的主题ZSH_THEME=&quot;steef&quot;# 更改完后重新启动终端，或者运行source .zshrc则可看见效果source .zshrc\n由于我只是轻度美化一下，官网的github上提供了更丰富的主题，相对于没有颜色配置的bash终端，zsh显得更丰富多彩了。需要注意的是这里最好使用windows terminal来运行各种终端环境，且字体最好使用Nerd字体，否则美化后的一些特殊字符无法显示，会变成乱码。\n\nWindows\nWindows下我之前一直使用cmd，主要也是之前科研环境用惯了cmd，现在网上的美化教程大部分都是基于Powershell。\nWindows下首先需要安装oh my posh，在Windows下可以在Microsoft Store中找到这个软件，当然也有别的方式安装，详情可以参考oh my posh的文档。\n\n安装成功后打开Powershell，输入oh-my-posh，只要命令有输出不报错则安装成功。与Linux环境不太一样，oh-my-posh安装成功后不会自动生成类似于.zshrc的配置文件，还需要调用命令生成。\n12345# powershell# oh-my-posh init &lt;shell&gt; # &lt;shell&gt;输入你使用的终端名称，windows下是powershelloh-my-posh init powershell\n初始化成功后，在你当前用户下~\\AppData\\Local\\会生成一个oh-my-posh的文件夹，里面包含一个默认关于oh-my-posh的.json配置文件。我们现在在官网下载一个主题配置文件放入这个文件夹中，主题配置网站：https://ohmyposh.dev/docs/themes\n在~\\AppData\\Local\\oh-my-posh新建一个.json文件，复制并粘贴你选中主题对应的配置内容，然后保存。\n1234# powershell# 在powershell中输入下面命令，即可看到主题在powershell中生效了oh-my-posh init pwsh --config &quot;$env:POSH_THEMES_PATH/jandedobbeleer.omp.json&quot; | Invoke-Expression\n上述的env:POSH_THEMES_PATH为主题配置文件的目录，对应上述的~\\AppData\\Local\\oh-my-posh，这里因为是通过Microsoft store安装的oh my posh所以有默认对应的参数，其他方式安装的oh my posh需要指定具体的目录路径。jandedobbeleer.omp.json是我随便选的主题配置，可以替换成别的主题。\n主题配置好后我们还需要自定义一个powershell配置文件，使得每次打开powershell后主题都能自动加载。\n123456789# powershell# 下面命令，会在当前目录的Documents(文档)下创建一个WindowsPowerShell\\Microsoft.PowerShell_profile.ps1的空文件if (!(Test-Path -Path $PROFILE)) &#123;  New-Item -ItemType File -Path $PROFILE -Force&#125;       # 将下面命令粘贴到Microsoft.PowerShell_profile.ps1的空文件中，替换对应的路径和文件oh-my-posh init pwsh --config &quot;$env:POSH_THEMES_PATH/jandedobbeleer.omp.json&quot; | Invoke-Expression\n替换和保存后，运行powershell都会自动加载主题配置，且第一次会有对应显示花费的时间。\n\n至此，两个终端的简单美化完毕🎉，高级功能后续再折腾。\n教程参考\n\nhttps://ohmyposh.dev/docs/installation/customize\nhttps://github.com/ohmyzsh/ohmyzsh\nhttps://docs.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_profiles?view=powershell-7.2\n\n","plink":"https://hyfaf.github.io/2022/08/19/Linux与Windows下的终端美化设置/"},{"title":"Hexo静态博客搭建记录","date":"2022-08-10T12:22:41.000Z","date_formatted":{"ll":"2022年8月10日","L":"2022/08/10","MM-DD":"08-10"},"updated":"2022-08-10T18:47:31.685Z","content":"想搭建的原因\n最近购买的阿里云服务器和域名都过期了，此前购买云服务器是为了学习Linux，后面也通过云服务器搭建了一些小应用，例如：个人博客、nextcloud云盘等。现在过期了，暂时不想续费，但是又想搭建一个可用博客，就想着通过Github Page等类似的服务免费搭建一个静态博客。\n搭建这个静态博客的目的：一是锻炼下自己看文档和动手操作的能力；二是记录一下自己编程学习的过程；三是顺便了解一下Hexo博客框架以及静态网页托管服务。\n搭建过程中踩的一些坑\nHexo默认的博客主题我不是很喜欢，选择了inside这个主题进行配置。然后发现主题配置的_config.yml文件和全局配置的_config.yml同名但不是同一个。博客根目录下的_config.yml用于控制博客的全局配置，例如替换主题、设置部署后的网址等配置，主题的细节配置：例如上传自己的头像、更改页面颜色等配置并不在这个文件中，博客根目录下node_modules\\hexo-theme-inside\\_config.yml才是有关主题细节的配置。算是一个坑吧，花了一段时间才理解清楚。\n静态页面部署才是最折腾人的，尝试了3个静态网页托管的平台，最终还是回到了Github。\n1. Gitee\n最开始想把页面部署到Gitee上的，尝试一下国内的代码托管平台，但是需要个人信息认证，感觉有些麻烦了，想着后面再弄这个平台，就放弃了。\n2. Gitlab\nGitlab部署需要通过CI/CD功能，这个功能类似于，你将博客的生成配置文件上传到Gitlab，Gitlab将博客配置进行线上运行部署，最后以静态网页的形式展示。但是现在Gitlab好像需要用户的上传信用卡信息进行验证才允许用户使用这个功能，这个方案也就失败了。\n3. Github\n本来根据Hexo文档中Github的部署方式来看，Github与Gitlab类似，也需要通过类似的CI/CD功能实现，但是Github好像能直接渲染包含index.html的静态页面，我就直接把本地生成好的静态网页包含文件一起推送到代码仓库上了，没想到成功了。\n后记\n算是第二次搭建个人博客了，之前在个人购买的云服务器上也搭建过，部署的过程有些不太一样，当时涉及到了Ngnix服务器的设置、购买自己的域名等一些问题，相对复杂一些。使用Github Page确实简单一些，只需要在意前端的内容，不过缺陷也是只能搭建静态页面的网站了。\n这次博客的搭建，大致了解了一下CI/CD的功能，复习了一下git的操作（太久没用了），同时还了解了Hexo、Hugo博客框架，也算是有一定收获了，后续如果有时间再学学前端的内容吧。\n这篇搭建记录也算是本博客的第一篇文章了，后续再更新！😁\n","plink":"https://hyfaf.github.io/2022/08/10/Hexo静态博客搭建记录/"}]